#Example of a plot
library(wooldridge)
#Example of a plot
plot(wage, educ, data = wage1)
#Example of a plot
attach(wage1)
plot(wage, educ)
plot(educ, wage, main = "Wage vs education")
abline(lm(wage ~ educ))
abline(lm(wage ~ educ), color = "blue")
abline(lm(wage ~ educ), col = "blue")
?abline
attach(wage1)
plot(educ, wage, main = "Wage vs education")
abline(lm(wage ~ educ), col = "blue")
1 + 1
1*2
1 + 1
1 + 1
2 + 2
3 + 3
#load Wooldridge package
library(wooldridge)
#Set a dataframe called mydata equal to wage1.
mydata = wage1
View(mydata)
3**3
exp(1)
1 == 1
1 == 1.2
#Viewing the variables in mydata
ls(mydata)
help(ls)
?ls
#Example of a plot
plot(mydata$educ, mydata$wage)
#Example of a plot
plot(mydata$educ, mydata$wage, main = "Wage vs Education")
#Example of a plot
plot(mydata$educ, mydata$wage, main = "Wage vs Education", xlab = "Education")
#Example of a plot
plot(mydata$educ, mydata$wage, main = "Wage vs Education", xlab = "Education", ylab = "Wage")
abline(lm(wage ~ educ, data = mydata), col = "blue")
summary(lm(wage ~ educ, data = mydata))
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#Exercise 2.1
#View the alcohol dataframe
View(alcohol)
#load Wooldridge package
library(wooldridge)
#Exercise 2.1
#View the alcohol dataframe
View(alcohol)
#Create a new dataframe which we can work with, named mydata
mydata = alcohol
View(mydata)
#Create a dummy variable morethantwo which is 1 if family size is more than 2, and 0 otherwise
mydata$morethantwo = ifelse(mydata$famsize > 2, 1, 0)
View(mydata[c("famsize", "morethantwo")])
morethantwo
mydata$morethantwo
mean(wage1$educ)
median(wage1$educ)
hist(wage1$educ)
max(wage1$educ) - min(wage1$educ)
sd(wage1$educ)
var(wage1$educ)
beta0 = 2
beta1 = 2
n = 100 #sample size
sigma = 10 #Noise in the model
X = rnorm(n) #Randomly generate X
U = rnorm(n, sd = sigma) #Randomly generate U
Y = beta0 + beta1 * X + U
plot(X,Y)
n = 100 #sample size
sigma = 1 #Noise in the model
beta0 = 2
beta1 = 2
X = rnorm(n) #Randomly generate X
U = rnorm(n, sd = sigma) #Randomly generate U
Y = beta0 + beta1 * X + U #Set Y accord
plot(X,Y)
n = 100 #sample size
sigma = 1 #Noise in the model
beta0 = 2
beta1 = 2
X = rnorm(n) #Randomly generate X
U = rnorm(n, sd = sigma) #Randomly generate U
Y = beta0 + beta1 * X + U #Set Y according to our econometric model
plot(X, Y, main = "OLS regression line", xlab = "X", ylab = "Y")
abline(lm(Y ~ X), col = "blue")
curve(beta0 + beta1 * x, add = TRUE)
legend(1, 0, legend=c("OLS (regression) line", "E[Y|X]"),
col=c("blue", "black"), lty=1, cex=1.2)
n = 100 #sample size
sigma = 10 #Noise in the model
beta0 = 2
beta1 = 2
X = rnorm(n) #Randomly generate X
U = rnorm(n, sd = sigma) #Randomly generate U
Y = beta0 + beta1 * X + U #Set Y according to our econometric model
plot(X, Y, main = "OLS regression line", xlab = "X", ylab = "Y")
abline(lm(Y ~ X), col = "blue")
curve(beta0 + beta1 * x, add = TRUE)
legend(1, 0, legend=c("OLS (regression) line", "E[Y|X]"),
col=c("blue", "black"), lty=1, cex=1.2)
n = 100 #sample size
sigma = 15 #Noise in the model
beta0 = 2
beta1 = 2
X = rnorm(n) #Randomly generate X
U = rnorm(n, sd = sigma) #Randomly generate U
Y = beta0 + beta1 * X + U #Set Y according to our econometric model
plot(X, Y, main = "OLS regression line", xlab = "X", ylab = "Y")
abline(lm(Y ~ X), col = "blue")
curve(beta0 + beta1 * x, add = TRUE)
legend(1, 0, legend=c("OLS (regression) line", "E[Y|X]"),
col=c("blue", "black"), lty=1, cex=1.2)
n = 10000 #sample size
sigma = 15 #Noise in the model
beta0 = 2
beta1 = 2
X = rnorm(n) #Randomly generate X
U = rnorm(n, sd = sigma) #Randomly generate U
Y = beta0 + beta1 * X + U #Set Y according to our econometric model
plot(X, Y, main = "OLS regression line", xlab = "X", ylab = "Y")
abline(lm(Y ~ X), col = "blue")
curve(beta0 + beta1 * x, add = TRUE)
legend(1, 0, legend=c("OLS (regression) line", "E[Y|X]"),
col=c("blue", "black"), lty=1, cex=1.2)
library(wooldridge)
cor(crime1$narr86, crime1$inc86)
#Calculating SSR from regression of wage on educ in wage1 (repeating Ex 4.2)
reg1 = lm(wage ~ educ, data = wage1)
ssr = sum(reg1$residuals)**2
#For 9/8/2021
# Clear environment
rm(list=ls())
# Set working directory
setwd("~/GitHub/ECON377")
#load Wooldridge package
library(wooldridge)
####################
#Calculating SSR from regression of wage on educ in wage1 (repeating Ex 4.2)
reg1 = lm(wage ~ educ, data = wage1)
ssr = sum(reg1$residuals)**2
####################
#Exercise 4.4 (Continues Exercise 4.2)
#Calculate the SST value for wage
sst = sum((mydata$wage - mean(mydata$wage))^2)
#Equation for R-squared
rsquared = 1 - ssr/sst
#For 9/8/2021
# Clear environment
rm(list=ls())
# Set working directory
setwd("~/GitHub/ECON377")
#load Wooldridge package
library(wooldridge)
####################
#Calculating SSR from regression of wage on educ in wage1 (repeating Ex 4.2)
mydata = wage1
reg1 = lm(wage ~ educ, data = wage1)
ssr = sum(reg1$residuals)**2
####################
#Exercise 4.4 (Continues Exercise 4.2)
#Calculate the SST value for wage
sst = sum((mydata$wage - mean(mydata$wage))^2)
sst
rsquared = 1 - ssr/sst
ssr = sum(reg1$residuals)**2
ssr = sum(reg1$residuals**2)
Calculate the SST value for wage
sst = sum((mydata$wage - mean(mydata$wage))^2)
#Equation for R-squared
rsquared = 1 - ssr/sst
#Check out the R-squared directly using the lm command, and summary
summary(reg1)$r.squared
#Calculate the SST value for wage
sst = sum((mydata$wage - mean(mydata$wage))^2)
#Equation for R-squared
rsquared = 1 - ssr/sst
#Check out the R-squared directly using the lm command, and summary
summary(reg1)$r.squared
#For 9/8/2021
# Clear environment
rm(list=ls())
# Set working directory
setwd("~/GitHub/ECON377")
#load Wooldridge package
library(wooldridge)
####################
#Calculating SSR from regression of wage on educ in wage1 (repeating Ex 4.2)
mydata = wage1
reg1 = lm(wage ~ educ, data = wage1)
ssr = sum(reg1$residuals**2)
####################
#Exercise 4.4 (Continues Exercise 4.2)
#Calculate the SST value for wage
sst = sum((mydata$wage - mean(mydata$wage))^2)
#Equation for R-squared
rsquared = 1 - ssr/sst
#Check out the R-squared directly using the lm command, and summary
summary(reg1)$r.squared
####################
#Exercise 4.6
#Regress ceo salary on roe
mydata = ceosal1 #redefine mydata as ceosal1
reg2 = lm(salary ~ roe, data = mydata)
#Get coefficients
coefficients(reg2)
#Generate new variable in mydata equal to salary in cents
mydata$salcents = mydata$salary * 100
#Regress ceo salary in CENTS on roe
reg3 = lm(salcents ~ roe, data = mydata)
#Get coefficients
coefficients(reg3)
#Question 15
mydata = crime1 #Creating a new dataset equal to crime1
mean(mydata$narr86)
#Question 16
mydata$narr86sq = mydata$narr86**2
mean(mydata$narr86sq)
#Question 17
reg = lm(narr86sq ~ inc86, data = mydata)
reg
#Question 18
ssr = sum(reg$residuals**2)
#Question 19
hbeta1 = 0.8/(3**2)
150 - hbeta1 * 20
#Question 19
hbeta1 = 2/(3**2)
150 - hbeta1 * 20
#Question 19
hbeta1 = 2/(2**2)
150 - hbeta1 * 20
n = 100 #sample size
sigma = 2 #Noise in the model
beta0 = 1
beta1 = 1
X = rnorm(n) #Randomly generate X
U = rnorm(n, sd = sigma) #Randomly generate U
Y = beta0 + beta1 * X + U #Set Y according to our econometric model
reg = lm(Y ~ X)
plot(X, Y, main = paste("R^2 =", toString(summary(reg)$r.squared)), xlab = "X", ylab = "Y")
abline(lm(Y ~ X), col = "blue")
curve(beta0 + beta1 * x, add = TRUE)
legend(1, 0, legend=c("OLS (regression) line", "E[Y|X]"),
col=c("blue", "black"), lty=1, cex=1.2)
n = 400 #sample size
sigma = 2 #Noise in the model
beta0 = 1
beta1 = 1
X = rnorm(n) #Randomly generate X
U = rnorm(n, sd = sigma) #Randomly generate U
Y = beta0 + beta1 * X + U #Set Y according to our econometric model
reg = lm(Y ~ X)
plot(X, Y, main = paste("R^2 =", toString(summary(reg)$r.squared)), xlab = "X", ylab = "Y")
abline(lm(Y ~ X), col = "blue")
curve(beta0 + beta1 * x, add = TRUE)
legend(1, 0, legend=c("OLS (regression) line", "E[Y|X]"),
col=c("blue", "black"), lty=1, cex=1.2)
n = 4000 #sample size
sigma = 2 #Noise in the model
beta0 = 1
beta1 = 1
X = rnorm(n) #Randomly generate X
U = rnorm(n, sd = sigma) #Randomly generate U
Y = beta0 + beta1 * X + U #Set Y according to our econometric model
reg = lm(Y ~ X)
plot(X, Y, main = paste("R^2 =", toString(summary(reg)$r.squared)), xlab = "X", ylab = "Y")
abline(lm(Y ~ X), col = "blue")
curve(beta0 + beta1 * x, add = TRUE)
legend(1, 0, legend=c("OLS (regression) line", "E[Y|X]"),
col=c("blue", "black"), lty=1, cex=1.2)
n = 1000 #sample size
sigma = 1 #Noise in the model
beta0 = 1
beta1 = 1
X = rnorm(n) #Randomly generate X
U = rnorm(n, sd = sigma) #Randomly generate U
Y = beta0 + beta1 * X + U #Set Y according to our econometric model
reg = lm(Y ~ X)
plot(X, Y, main = paste("R^2 =", toString(summary(reg)$r.squared)), xlab = "X", ylab = "Y")
abline(lm(Y ~ X), col = "blue")
curve(beta0 + beta1 * x, add = TRUE)
legend(1, 0, legend=c("OLS (regression) line", "E[Y|X]"),
col=c("blue", "black"), lty=1, cex=1.2)
n = 1000 #sample size
sigma = 0.2 #Noise in the model
beta0 = 1
beta1 = 1
X = rnorm(n) #Randomly generate X
U = rnorm(n, sd = sigma) #Randomly generate U
Y = beta0 + beta1 * X + U #Set Y according to our econometric model
reg = lm(Y ~ X)
plot(X, Y, main = paste("R^2 =", toString(summary(reg)$r.squared)), xlab = "X", ylab = "Y")
abline(lm(Y ~ X), col = "blue")
curve(beta0 + beta1 * x, add = TRUE)
legend(1, 0, legend=c("OLS (regression) line", "E[Y|X]"),
col=c("blue", "black"), lty=1, cex=1.2)
library(wooldridge)
reg = lm(wage ~ educ, data = wage1)
lm(wage1$wage ~ reg$residuals)
lm(reg$residuals~ wage1$educ)
#Regress ceo salary on roe
mydata = ceosal1 #redefine mydata as ceosal1
reg2 = lm(salary ~ roe, data = mydata)
#Get coefficients
coefficients(reg2)
mean(ceosal1$salary)
mean(ceosal1$roe)
?wooldridge
