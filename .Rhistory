#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
se1 = sqrt(diag(vcov(reg)))[2]
#Save slope coefficient
if (divide_option) {
slopevec[i] = (reg$coefficients[2] - beta1) / se1 + beta1
} else {
slopevec[i] = reg$coefficients[2]
}
}
#Plot the simulation results with overlaid t density and Gaussian density
if (divide_option){
hist(slopevec, main = paste("Histogram of
t values with n =",
toString(n)),
breaks = ceiling(M**(2/5)),
xlim = c(beta1 - 3, beta1 + 3), freq = FALSE, ylim = c(0, dnorm(0) + 0.05))
} else {
hist(slopevec, main = paste("Histogram of
beta1 estimates with n =",
toString(n)),
breaks = 20,
xlim = c(beta1 - 3, beta1 + 3), freq = FALSE, ylim = c(0, dnorm(0) + 0.05))
}
df = n - 2
curve(dt(x - beta1, df = df), from = beta1 - 4, to = beta1 + 4, add = TRUE, col = "blue")
curve(dnorm(x - beta1), from = beta1 - 4, to = beta1 + 4, add = TRUE, col = "red")
legend(-2, 0.3, legend=c(paste("t distribution with n =",
toString(n)), "Normal distribution"),
col=c("blue", "red"), lty=1, cex=1.2)
Xvec = c(7,6,4,5,3,5)
Sx_sq = var(Xvec)
print(Sx_sq * (n-1))
n
Xvec = c(7,6,4,5,3,5)
Sx_sq = var(Xvec)
print(Sx_sq * (6-1))
reg = lm(log(salary) ~ log(sales), data = ceosal1)
stargazer(reg)
stargazer(reg, type = "text")
10e3
# For 11/8
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#load Wooldridge package
library(wooldridge)
####################
#Illustration of one-sided hypothesis tests
####################
n = 100 #Set sample size
M = 1000 #Number of experiments
beta0 = 1
beta1 = 0
sigma = 1 #Standard deviation of U, i.e. sigma
#Slope coefficient vector
slopevec = rep(0,M)
#Monte Carlo
for (i in 1:M) {
#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
#Save t-value
slopevec[i] = summary(reg)$coefficients[2,2]
}
hist(slopevec, main = paste("Histogram of
t-statistics with beta1 =",
toString(beta1)),
xlim = c(- 5, 5))
# For 11/8
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#load Wooldridge package
library(wooldridge)
####################
#Illustration of one-sided hypothesis tests
####################
n = 100 #Set sample size
M = 1000 #Number of experiments
beta0 = 1
beta1 = 0
sigma = 1 #Standard deviation of U, i.e. sigma
#Slope coefficient vector
slopevec = rep(0,M)
#Monte Carlo
for (i in 1:M) {
#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
#Save t-value
slopevec[i] = summary(reg)$coefficients[2,2]
}
hist(slopevec, main = paste("Histogram of
t-statistics with beta1 =",
toString(beta1)),
xlim = c(- 1, 1))
summary(reg)$coefficients
# For 11/8
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#load Wooldridge package
library(wooldridge)
####################
#Illustration of one-sided hypothesis tests
####################
n = 100 #Set sample size
M = 1000 #Number of experiments
beta0 = 1
beta1 = 0
sigma = 1 #Standard deviation of U, i.e. sigma
#Slope coefficient vector
slopevec = rep(0,M)
#Monte Carlo
for (i in 1:M) {
#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
#Save t-value
slopevec[i] = summary(reg)$coefficients[2,3]
}
hist(slopevec, main = paste("Histogram of
t-statistics with beta1 =",
toString(beta1)),
xlim = c(- 1, 1))
# For 11/8
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#load Wooldridge package
library(wooldridge)
####################
#Illustration of one-sided hypothesis tests
####################
n = 100 #Set sample size
M = 1000 #Number of experiments
beta0 = 1
beta1 = 0
sigma = 1 #Standard deviation of U, i.e. sigma
#Slope coefficient vector
slopevec = rep(0,M)
#Monte Carlo
for (i in 1:M) {
#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
#Save t-value
slopevec[i] = summary(reg)$coefficients[2,3]
}
hist(slopevec, main = paste("Histogram of
t-statistics with beta1 =",
toString(beta1)),
xlim = c(- 5, 5))
# For 11/8
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#load Wooldridge package
library(wooldridge)
####################
#Illustration of one-sided hypothesis tests
####################
n = 100 #Set sample size
M = 1000 #Number of experiments
beta0 = 1
beta1 = 0
sigma = 1 #Standard deviation of U, i.e. sigma
#Slope coefficient vector
slopevec = rep(0,M)
#Monte Carlo
for (i in 1:M) {
#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
#Save t-value
slopevec[i] = summary(reg)$coefficients[2,3]
}
hist(slopevec, main = paste("Histogram of
t-statistics with beta1 =",
toString(beta1)),
xlim = c(- 10, 10))
# For 11/8
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#load Wooldridge package
library(wooldridge)
####################
#Illustration of one-sided hypothesis tests
####################
n = 100 #Set sample size
M = 1000 #Number of experiments
beta0 = 1
beta1 = 0.1
sigma = 1 #Standard deviation of U, i.e. sigma
#Slope coefficient vector
slopevec = rep(0,M)
#Monte Carlo
for (i in 1:M) {
#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
#Save t-value
slopevec[i] = summary(reg)$coefficients[2,3]
}
hist(slopevec, main = paste("Histogram of
t-statistics with beta1 =",
toString(beta1)),
xlim = c(- 10, 10))
# For 11/8
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#load Wooldridge package
library(wooldridge)
####################
#Illustration of one-sided hypothesis tests
####################
n = 1000 #Set sample size
M = 1000 #Number of experiments
beta0 = 1
beta1 = 0.1
sigma = 1 #Standard deviation of U, i.e. sigma
#Slope coefficient vector
slopevec = rep(0,M)
#Monte Carlo
for (i in 1:M) {
#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
#Save t-value
slopevec[i] = summary(reg)$coefficients[2,3]
}
hist(slopevec, main = paste("Histogram of
t-statistics with beta1 =",
toString(beta1)),
xlim = c(- 10, 10))
# For 11/8
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#load Wooldridge package
library(wooldridge)
####################
#Illustration of one-sided hypothesis tests
####################
n = 10000 #Set sample size
M = 1000 #Number of experiments
beta0 = 1
beta1 = 0.1
sigma = 1 #Standard deviation of U, i.e. sigma
#Slope coefficient vector
slopevec = rep(0,M)
#Monte Carlo
for (i in 1:M) {
#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
#Save t-value
slopevec[i] = summary(reg)$coefficients[2,3]
}
hist(slopevec, main = paste("Histogram of
t-statistics with beta1 =",
toString(beta1)),
xlim = c(- 10, 10))
# For 11/8
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#load Wooldridge package
library(wooldridge)
####################
#Illustration of one-sided hypothesis tests
####################
n = 1000 #Set sample size
M = 1000 #Number of experiments
beta0 = 1
beta1 = 0.1
sigma = 1 #Standard deviation of U, i.e. sigma
#Slope coefficient vector
slopevec = rep(0,M)
#Monte Carlo
for (i in 1:M) {
#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
#Save t-value
slopevec[i] = summary(reg)$coefficients[2,3]
}
hist(slopevec, main = paste("Histogram of
t-statistics with beta1 =",
toString(beta1)),
xlim = c(- 10, 10))
# For 11/8
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#load Wooldridge package
library(wooldridge)
####################
#Illustration of one-sided hypothesis tests
####################
n = 500 #Set sample size
M = 1000 #Number of experiments
beta0 = 1
beta1 = 0.1
sigma = 1 #Standard deviation of U, i.e. sigma
#Slope coefficient vector
slopevec = rep(0,M)
#Monte Carlo
for (i in 1:M) {
#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
#Save t-value
slopevec[i] = summary(reg)$coefficients[2,3]
}
hist(slopevec, main = paste("Histogram of
t-statistics with beta1 =",
toString(beta1)),
xlim = c(- 10, 10))
# For 11/8
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#load Wooldridge package
library(wooldridge)
####################
#Illustration of one-sided hypothesis tests
####################
n = 2000 #Set sample size
M = 1000 #Number of experiments
beta0 = 1
beta1 = 0.1
sigma = 1 #Standard deviation of U, i.e. sigma
#Slope coefficient vector
slopevec = rep(0,M)
#Monte Carlo
for (i in 1:M) {
#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
#Save t-value
slopevec[i] = summary(reg)$coefficients[2,3]
}
hist(slopevec, main = paste("Histogram of
t-statistics with beta1 =",
toString(beta1)),
xlim = c(- 10, 10))
# For 11/8
# Clear environment
rm(list=ls())
# Set working directory
setwd("C:/Users/Isaac/OneDrive - UNC-Wilmington/Econometrics/R")
#load Wooldridge package
library(wooldridge)
####################
#Illustration of one-sided hypothesis tests
####################
n = 2000 #Set sample size
M = 1000 #Number of experiments
beta0 = 1
beta1 = 0
sigma = 1 #Standard deviation of U, i.e. sigma
#Slope coefficient vector
slopevec = rep(0,M)
#Monte Carlo
for (i in 1:M) {
#Generate data
Uvec = rnorm(n, mean = 0, sd = sigma)
Xvec = rnorm(n, mean = 0, sd = 2)
Yvec = beta0 + beta1 * Xvec + Uvec
#Run regressions
reg = lm(Yvec ~ Xvec)
#Save t-value
slopevec[i] = summary(reg)$coefficients[2,3]
}
hist(slopevec, main = paste("Histogram of
t-statistics with beta1 =",
toString(beta1)),
xlim = c(- 10, 10))
#####
# Exericse 10.3
# First, input key parameters
hbetaj = 8
se_hbetaj = 6.7
t_hbetaj = hbetaj / se_hbetaj
n = 100
k = 3
dof = n - k - 1
# Choose a significance level q
q = 0.01
# Find the appropriate critical value
c = qt(1 - q, df = dof)
# Do we reject the null hypothesis?
t_hbetaj > c
xvec = c(8.8, 6.6, 2)
yvec = c(4.2, 6, 6.2)
reg = lm(yvec ~ xvec)
reg$coefficients[1] + reg$coefficients[2] * 8.8
xvec = c(8.8, 6.6, 2)
yvec = c(4.2, 6, 6.2)
reg = lm(yvec ~ xvec)
reg$coefficients[1] + reg$coefficients[2] * 8.8
# Q2 get rid of age
reg = lm(sleep ~ educ + totwrk + hrwage, data = sleep75)
summary(reg)$coefficients[3,4]
summary(reg)$coefficients[4,4]
(1 - summary(reg)$coefficients[4,4]) * 100
reg = lm(log(salary) ~ GPA + cost + rank, data = lawsch85)
reg$coefficients[4] / reg$coefficients[2] * (17-62)
#Q 4 add some obfuscation?
1.37 * (-2.48)
reg$coefficients[4] / reg$coefficients[2]
reg$coefficients[4] / reg$coefficients[2] * (27 - 82)
reg = lm(log(salary) ~ GPA + cost + rank, data = lawsch85)
reg$coefficients[4] / reg$coefficients[2] * (27 - 82)
# Q2 get rid of age
reg = lm(sleep ~ educ + totwrk + hrwage + age, data = sleep75)
summary(reg)
(1 - 0.612) * 100
summary(reg)$coefficients[5,4]
summary(reg)$coefficients[5,4]
library(wooldridge
)
summary(ceosal1$roe)
qnorm(0.99)
summary(rental$pctstu)
summary(rental$avginc)
reg = lm(log(rent) ~ log(pop) + log(avginc) + pctstu, data = rental)
reg
summary(reg)
reg = lm(log(salary) ~ log(sales) + roe + ros, data = ceosal1)
reg$coefficients[3] * 10
reg$coefficients[3] * 10 * 100
summary(reg)
#Q1 df in
reg = lm(log(salary) ~ log(sales) + roe + ros, data = ceosal1)
reg$coefficients[3] * 10 * 100
summary(reg)
n = nrow(ceosal1)
dof = n - 3 - 1
dof
qt((1 -q), df = dof)
summary(reg)
summary(reg)$coefficients[3,3]
q = 0.1
qt((1 -q), df = dof)
summary(reg)$coefficients[4,3]
reg = lm(log(rent) ~ log(pop) + log(avginc) + pctstu, data = rental)
reg$coefficients[2] * (-15)
exp(reg$coefficients[1] + reg$coefficients[2] * log(mean(rental$pop))
+ reg$coefficients[3] * log(mean(rental$avginc))
+ 25 * reg$coefficients[4])
# Question 17 hypotheses
summary(reg)$coefficients[4,3] - qt(0.95, df = nrow(rental) - 3 - 1)
qnorm(0.95)
reg = lm(colGPA ~ hsGPA + ACT + skipped, data = gpa1)
library(wooldridge)
reg = lm(colGPA ~ hsGPA + ACT + skipped, data = gpa1)
summary(reg)$coefficients
summary(reg)$coefficients[,3]
summary(reg)$coefficients[,3] > 1.96
